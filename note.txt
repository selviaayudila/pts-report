// index report


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="dist/img/logo.png" type="image/png">
  <title>Sanwa | View Data</title>

  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body>

<?php include('nav.php'); ?>
<?php include('sidebar.php'); ?>

<div class="content-wrapper">
  <section class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1>Report</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Report</a></li>
            <li class="breadcrumb-item active">Report View</li>
          </ol>
        </div>
      </div>
    </div>
  </section>

  <!-- Main content -->
<section class="content">
  <div class="container-fluid">
    <div class="card">
      <div class="card-header d-flex justify-content-left">
        <!-- Tombol Pilih Bulan dan Tahun -->
        <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#addDatabaseModal">
         <i class="fas fa-download"></i> Export Database
        </button>
      </div>

        <div class="card-body">
          <table id="dataTable" class="table table-bordered table-striped">
            <thead>
              <tr>
                <th>PostingDate</th>
                <th>CustName</th>
                <th>PartNo</th>
                <th>PartName</th>
                <th>MoldNo</th>
                <th>JSNo</th>
                <th>OprShift</th>
                <th>ACavity</th>
                <th>QCV</th>
                <th>QCT</th>
                <th>ACT</th>
                <th>ShiftHour</th>
                <th>NumOpr</th>
                <th>ActualMC</th>
                <th>MCTonnage</th>
                <th>StartTime</th>
                <th>EndTime</th>
                <th>AOutput</th>
                <th>NPO</th>
                <th>TPM</th>
                <th>MOC</th>
                <th>T</th>
                <th>MS/SD</th>
                <th>DMC</th>
                <th>NMP</th>
                <th>PA</th>
                <th>QP</th>
                <th>MB</th>
                <th>PM</th>
                <th>MOR1</th>
                <th>MOR2</th>
                <th>JOS</th>
                <th>EOS</th>
                <th>Total Downtime</th>
                <th>Silver Streak</th>
                <th>Short Molding</th>
                <th>Dented</th>
                <th>Sink Mark</th>
                <th>Burn Mark</th>
                <th>Buble</th>
                <th>Black Dot</th>
                <th>Scratches</th>
                <th>Flow Mark</th>
                <th>Dim Out</th>
                <th>Discolouration</th>
                <th>Shiny</th>
                <th>White M</th>
                <th>Flahes</th>
                <th>Drag Mark</th>
                <th>Oily Mark</th>
                <th>Over Cut</th>
                <th>Pin Mark</th>
                <th>Wrinkle</th>
                <th>Weld Line</th>
                <th>Pin broken</th>
                <th>Damage</th>
                <th>Metal Chip</th>
                <th>Others</th>
                <th>Crack</th>
                <th>Part Drop to Floor</th>
                <th>Start up Scrap</th>
                <th>Total Reject</th>
              </tr>
            </thead>
            <tbody>
              <!-- Data akan dimuat di sini -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>
</div>

<!-- Modal Pilih Bulan dan Tahun -->
<div class="modal fade" id="addDatabaseModal" tabindex="-1" role="dialog" aria-labelledby="addDatabaseModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addDatabaseModalLabel">Database Data</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Pesan Info -->
        <div class="alert alert-warning" role="alert">
          <i class="fas fa-info-circle"></i> Before downloading the PTS report, first download the database data.
        </div>

        <form id="filterForm" method="post">
          <div class="form-group">
            <label for="selectMonth">Month</label>
            <select class="form-control" id="selectMonth" name="month" required>
              <option value="">Select Month</option>
              <option value="01">January</option>
              <option value="02">February</option>
              <option value="03">March</option>
              <option value="04">April</option>
              <option value="05">May</option>
              <option value="06">June</option>
              <option value="07">July</option>
              <option value="08">August</option>
              <option value="09">September</option>
              <option value="10">October</option>
              <option value="11">November</option>
              <option value="12">December</option>
            </select>
          </div>
          <div class="form-group">
            <label for="selectYear">Year</label>
            <select class="form-control" id="selectYear" name="year" required>
              <option value="">Select Year</option>
              <?php 
                $currentYear = date("Y");
                for ($i = $currentYear; $i >= $currentYear - 10; $i--) {
                  echo "<option value=\"$i\">$i</option>";
                }
              ?>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="filterButton">Export</button>
      </div>
    </div>
  </div>
</div>

<!-- Footer -->
<?php include 'footer.php'; ?>

<!-- jQuery -->
<script src="plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables -->
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<!-- AdminLTE App -->
<script src="dist/js/adminlte.min.js"></script>

<script>
  $(document).ready(function () {
    $("#dataTable").DataTable({
      "responsive": false,
      "scrollX": true,
      "autoWidth": false,
      "lengthChange": true,
      "columnDefs": [
        { "width": "100px", "targets": "_all" }
      ]
    }).buttons().container().appendTo('#dataTable_wrapper .col-md-6:eq(0)');

    $('#dataTable').css({
      'table-layout': 'fixed',
      'word-wrap': 'break-word'
    });

    $('#filterButton').click(function () {
      const form = $('#filterForm');
      if (form[0].checkValidity()) {
        // Serialize form data
        const formData = form.serializeArray();
        
        // Get month and year values from the form
        const month = formData.find(item => item.name === 'month').value;
        const year = formData.find(item => item.name === 'year').value;

        // Show a loading message or spinner
        const loadingMessage = $('<p>Loading, please wait...</p>').appendTo('.modal-body');

        // Use AJAX to send the form data
        $.post('process.php', $.param(formData), function (response) {
          // Remove loading message
          loadingMessage.remove();
          // Handle the response
          alert(`Database data (${month} ${year}) successfully exported!`);
          location.reload(); // Reload to reflect changes if needed
        }).fail(function (xhr, status, error) {
          // Remove loading message
          loadingMessage.remove();
          alert('An error occurred: ' + xhr.status + ' ' + error);
        });
      } else {
        alert('Please select both month and year!');
      }
    });
  });
</script>
</body>
</html>




16/01/2025
// job.php 583 row

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="dist/img/logo.png" type="image/png">
  <title>Sanwa | View Data</title>

  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body>

<?php include('nav.php'); ?>
<?php include('sidebar.php'); ?>

<div class="content-wrapper">
  <section class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1>Report</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Report</a></li>
            <li class="breadcrumb-item active">Report View</li>
          </ol>
        </div>
      </div>
    </div>
  </section>

  <!-- Main content -->
<section class="content">
  <div class="container-fluid">
    <div class="card">
      <div class="card-header d-flex justify-content-left">
        <!-- Tombol Pilih Bulan dan Tahun -->
        <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#addDatabaseModal">
         <i class="fas fa-download"></i> Export Database
        </button>
        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#selectMonthYearModal">
  <i class="fas fa-calendar-alt"></i> Export Report
</button>

      </div>
        <div class="card-body">
          <table id="dataTable" class="table table-bordered table-striped">
            <thead>
              <tr>
                <th>PostingDate</th>
                <th>CustName</th>
                <th>PartNo</th>
                <th>PartName</th>
                <th>MoldNo</th>
                <th>JSNo</th>
                <th>OprShift</th>
                <th>ACavity</th>
                <th>QCV</th>
                <th>QCT</th>
                <th>ACT</th>
                <th>ShiftHour</th>
                <th>NumOpr</th>
                <th>ActualMC</th>
                <th>MCTonnage</th>
                <th>StartTime</th>
                <th>EndTime</th>
                <th>AOutput</th>
                <th>NPO</th>
                <th>TPM</th>
                <th>MOC</th>
                <th>T</th>
                <th>MS/SD</th>
                <th>DMC</th>
                <th>NMP</th>
                <th>PA</th>
                <th>QP</th>
                <th>MB</th>
                <th>PM</th>
                <th>MOR1</th>
                <th>MOR2</th>
                <th>JOS</th>
                <th>EOS</th>
                <th>Total Downtime</th>
                <th>Silver Streak</th>
                <th>Short Molding</th>
                <th>Dented</th>
                <th>Sink Mark</th>
                <th>Burn Mark</th>
                <th>Buble</th>
                <th>Black Dot</th>
                <th>Scratches</th>
                <th>Flow Mark</th>
                <th>Dim Out</th>
                <th>Discolouration</th>
                <th>Shiny</th>
                <th>White M</th>
                <th>Flahes</th>
                <th>Drag Mark</th>
                <th>Oily Mark</th>
                <th>Over Cut</th>
                <th>Pin Mark</th>
                <th>Wrinkle</th>
                <th>Weld Line</th>
                <th>Pin broken</th>
                <th>Damage</th>
                <th>Metal Chip</th>
                <th>Others</th>
                <th>Crack</th>
                <th>Part Drop to Floor</th>
                <th>Start up Scrap</th>
                <th>Total Reject</th>
              </tr>
            </thead>
            <tbody>
            <?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $startDate = date('Y-m-01', strtotime("-1 month", strtotime("$year-$month-01")));
    $endDate = date('Y-m-t', strtotime("$year-$month-01"));
    $folderPath = __DIR__ . "/pts_db/$year/$month/";

    if (is_dir($folderPath)) {
        $jobOrderFile = $folderPath . "job_order_changes.xlsx";
        $toolingFile = $folderPath . "tooling_changes.xlsx";
        $productsFile = $folderPath . "products.xlsx";
        $toolingTargetsFile = $folderPath . "tooling_targets.xlsx"; // File tooling_targets.xlsx
        $tonnageFile = $folderPath . "tonnage.xlsx"; // File tonnage.xlsx
        $outputEntriesFile = $folderPath . "output_entries.xlsx"; // File output_entries.xlsx
        
        if (file_exists($jobOrderFile) && file_exists($toolingFile) && file_exists($productsFile) && file_exists($toolingTargetsFile) && file_exists($tonnageFile) && file_exists($outputEntriesFile)) {
            // Load file tonnage.xlsx
            $tonnageSheet = IOFactory::load($tonnageFile)->getActiveSheet();
            $tonnageData = $tonnageSheet->toArray();
 // Load file output_entries.xlsx
 $outputEntriesSheet = IOFactory::load($outputEntriesFile)->getActiveSheet();
 $outputEntriesData = $outputEntriesSheet->toArray(null, true, true, true);
 $outputEntries = [];
 foreach ($outputEntriesData as $index => $row) {
     if ($index === 1) continue; // Skip header row
     $jobOrderID = trim($row['C']); // Kolom C: Job Order ID
     $quantity = trim($row['D']); // Kolom D: Quantity/Output
     $timestamp = trim($row['F']); // Kolom F: Timestamp
     $shift = tentukanShift($timestamp);
     $date = formatShiftDate($timestamp, $shift);

     $key = $jobOrderID . '|' . $date . '|' . $shift;

     if (!isset($outputEntries[$key])) {
         $outputEntries[$key] = 0;
     }
     $outputEntries[$key] += (int)$quantity;
 }

            // Buat mapping machineID dan tonnage
            $tonnageMap = [];
            foreach ($tonnageData as $index => $row) {
                if ($index === 0) continue; // Skip header row
                $machineID = trim($row[0]); // Kolom A: machineID
                $tonnage = trim($row[1]); // Kolom B: tonnage
                $tonnageMap[$machineID] = $tonnage;
            }

            // Load file job_order_changes.xlsx
            $jobOrderSheet = IOFactory::load($jobOrderFile)->getActiveSheet();
            $jobOrderData = $jobOrderSheet->toArray();

            // Load file tooling_changes.xlsx
            $toolingSheet = IOFactory::load($toolingFile)->getActiveSheet();
            $toolingData = $toolingSheet->toArray();

            // Load file products.xlsx
            $productsSheet = IOFactory::load($productsFile)->getActiveSheet();
            $productsData = $productsSheet->toArray();

            // Load file tooling_targets.xlsx
            $toolingTargetsSheet = IOFactory::load($toolingTargetsFile)->getActiveSheet();
            $toolingTargetsData = $toolingTargetsSheet->toArray();

            // Buat mapping ToolingID dari tooling_changes.xlsx
            $toolingMap = [];
            foreach ($toolingData as $index => $row) {
                if ($index === 0) continue; // Skip header row
                $toolingID = trim($row[1]); // Kolom B: toolingID
                $productID = trim($row[2]); // Kolom C: productID
                $cavityNum = trim($row[3]); // Kolom D: cavityNum
                $cycleTime = trim($row[4]); // Kolom E: cycleTime
                $toolingMap[$toolingID] = [
                    'ProductID' => $productID,
                    'CavityNum' => $cavityNum,
                    'CycleTime' => $cycleTime,
                ];
            }

            // Buat mapping ProductID dari products.xlsx
            $productMap = [];
            foreach ($productsData as $index => $row) {
                if ($index === 0) continue; // Skip header row
                $productID = trim($row[0]); // Kolom A: productID
                $customerID = trim($row[1]); // Kolom B: customerID
                $productName = trim($row[2]); // Kolom C: productName
                $productMap[$productID] = [
                    'CustomerID' => $customerID,
                    'ProductName' => $productName,
                ];
            }

            // Buat mapping dari tooling_targets.xlsx
            $toolingTargetsMap = [];
            foreach ($toolingTargetsData as $index => $row) {
                if ($index === 0) continue; // Skip header row
                $toolingID = trim($row[0]); // Kolom A: toolingID
                $productID = trim($row[1]); // Kolom B: productID
                $targetCavityNum = trim($row[2]); // Kolom C: targetCavityNum
                $targetCycleTime = trim($row[3]); // Kolom D: targetCycleTime

                // Prioritas berdasarkan toolingID
                $toolingTargetsMap[$toolingID] = [
                    'TargetCavityNum' => $targetCavityNum,
                    'TargetCycleTime' => $targetCycleTime,
                ];

                // Jika tidak ditemukan, fallback ke productID
                if (!isset($toolingTargetsMap[$productID])) {
                    $toolingTargetsMap[$productID] = [
                        'TargetCavityNum' => $targetCavityNum,
                        'TargetCycleTime' => $targetCycleTime,
                    ];
                }
            }

            // Filter semua data untuk periode tertentu
            $allJobOrders = [];
            $endDates = []; // Menyimpan tanggal selesai (End Time) berdasarkan JobOrderID
            foreach ($jobOrderData as $index => $row) {
                if ($index === 0) continue; // Skip header row

                $jobOrderID = trim($row[1]); // Kolom B: JobOrderID
                $timestamp = trim($row[6]); // Kolom G: Timestamp
                $status = trim($row[4]); // Kolom E: Status
                $shift = tentukanShift($timestamp);
                $postingDate = formatShiftDate($timestamp, $shift);
                $postingDateFormatted = date('Y-m-d', strtotime(str_replace('/', '-', $postingDate)));

                // Tentukan waktu mulai (Start Time)
                $startTime = date('d/m/Y H:i', strtotime($timestamp));

                // Tentukan waktu selesai (End Time) jika status "Paused" atau "Closed"
                if ($status == 'PAUSED' || $status == 'CLOSED') {
                    $endDates[$jobOrderID] = date('d/m/Y H:i', strtotime($timestamp));
                }

                if ($postingDateFormatted >= $startDate && $postingDateFormatted <= $endDate) {
                    $allJobOrders[] = $row; // Tambahkan semua data
                }
            }

            // Data untuk laporan
            $reportData = array_filter($allJobOrders, function ($row) use ($month, $year) {
                $timestamp = trim($row[6]);
                $shift = tentukanShift($timestamp);
                $postingDate = formatShiftDate($timestamp, $shift);

                $jobMonth = date('m', strtotime(str_replace('/', '-', $postingDate)));
                $jobYear = date('Y', strtotime(str_replace('/', '-', $postingDate)));
                return $jobMonth == $month && $jobYear == $year;
            });

            // Tampilkan data dalam tabel
            echo "<h3>Data for $month/$year</h3>";
            echo "<table border='1'>";
            echo "<tr>
                    <th>PostingDate</th>
                    <th>MoldNo</th>
                    <th>JSNo</th>
                    <th>OprShift</th>
                    <th>ActualMC</th>
                    <th>ProductID</th>
                    <th>CustomerID</th>
                    <th>ProductName</th>
                    <th>CavityNum</th>
                    <th>CycleTime</th>
                    <th>TargetCavityNum</th>
                    <th>TargetCycleTime</th>
                    <th>Tonnage</th> <!-- Kolom Tonnage ditambahkan -->
                    <th>StartTime</th> <!-- Kolom StartTime ditambahkan -->
                    <th>EndTime</th> <!-- Kolom EndTime ditambahkan -->
                   <th>ShiftHour</th> <!-- Kolom ShiftHour ditambahkan -->
                    <th>NumOpr</th> <!-- Kolom NumOpr ditambahkan -->
                    <th>Output</th> <!-- Kolom Output ditambahkan -->
                  </tr>";

            foreach ($reportData as $row) {
                $jobOrderID = trim($row[1]); // Kolom B: JobOrderID
                $machineID = trim($row[2]); // Kolom C: MachineID
                $toolingID = trim($row[3]); // Kolom D: toolingID
                $timestamp = trim($row[6]); // Kolom G: Timestamp

                $shift = tentukanShift($timestamp);
                $postingDate = formatShiftDate($timestamp, $shift);

                $key = $jobOrderID . '|' . $postingDate . '|' . $shift;
                $output = isset($outputEntries[$key]) ? $outputEntries[$key] : 0;


                // Ambil data dari tooling_changes.xlsx berdasarkan ToolingID
                $productID = isset($toolingMap[$toolingID]) ? $toolingMap[$toolingID]['ProductID'] : 'N/A';
                $cavityNum = isset($toolingMap[$toolingID]) ? $toolingMap[$toolingID]['CavityNum'] : 'N/A';
                $cycleTime = isset($toolingMap[$toolingID]) ? $toolingMap[$toolingID]['CycleTime'] : 'N/A';

                // Ambil data dari products.xlsx berdasarkan ProductID
                $customerID = isset($productMap[$productID]) ? $productMap[$productID]['CustomerID'] : 'N/A';
                $productName = isset($productMap[$productID]) ? $productMap[$productID]['ProductName'] : 'N/A';

                // Ambil data dari tooling_targets.xlsx
                $targetCavityNum = isset($toolingTargetsMap[$productID]['TargetCavityNum']) ? $toolingTargetsMap[$productID]['TargetCavityNum'] : 'N/A';
                $targetCycleTime = isset($toolingTargetsMap[$productID]['TargetCycleTime']) ? $toolingTargetsMap[$productID]['TargetCycleTime'] : 'N/A';

                // Ambil data tonnage berdasarkan machineID
                $tonnage = isset($tonnageMap[$machineID]) ? $tonnageMap[$machineID] : 'N/A';

                // Ambil waktu mulai dan selesai
                $startTime = date('d/m/Y H:i', strtotime($timestamp));
                $endTime = isset($endDates[$jobOrderID]) ? $endDates[$jobOrderID] : 'RUNNING';

                echo "<tr>
                        <td>{$postingDate}</td>
                        <td>$toolingID</td>
                        <td>{$jobOrderID}</td>
                        <td>{$shift}</td>
                        <td>{$machineID}</td>
                        <td>{$productID}</td>
                        <td>{$customerID}</td>
                        <td>{$productName}</td>
                        <td>{$cavityNum}</td>
                        <td>{$cycleTime}</td>
                        <td>{$targetCavityNum}</td>
                        <td>{$targetCycleTime}</td>
                        <td>{$tonnage}</td>
                        <td>{$startTime}</td>
                        <td>{$endTime}</td>
                      <td>7.5</td> <!-- Value for ShiftHour -->
                        <td>1</td> <!-- Value for NumOpr -->
                         <td>{$output}</td>
                    </tr>";
            }
            echo "</table>";
        }
    }
}
?>

            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>
</div>
<!-- Modal Pilih Bulan dan Tahun -->
<div class="modal fade" id="addDatabaseModal" tabindex="-1" role="dialog" aria-labelledby="addDatabaseModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addDatabaseModalLabel">Database Data</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Pesan Info -->
        <div class="alert alert-warning" role="alert">
          <i class="fas fa-info-circle"></i> Before downloading the PTS report, first download the database data.
        </div>

        <form id="filterForm" method="post">
          <div class="form-group">
            <label for="selectMonth">Month</label>
            <select class="form-control" id="selectMonth" name="month" required>
              <option value="">Select Month</option>
              <?php
              for ($m = 1; $m <= 12; $m++) {
                  $monthName = date('F', mktime(0, 0, 0, $m, 1));
                  $monthValue = str_pad($m, 2, '0', STR_PAD_LEFT); // Format dengan 2 digit
                  echo "<option value=\"$monthValue\">$monthName</option>";
              }
              ?>
            </select>
          </div>
          <div class="form-group">
            <label for="selectYear">Year</label>
            <select class="form-control" id="selectYear" name="year" required>
              <option value="">Select Year</option>
              <?php 
                $currentYear = date("Y");
                for ($i = $currentYear; $i >= $currentYear - 3; $i--) {
                  echo "<option value=\"$i\">$i</option>";
                }
              ?>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="filterButton">Export</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Pilih Bulan dan Tahun untuk Laporan -->
<div class="modal fade" id="selectMonthYearModal" tabindex="-1" role="dialog" aria-labelledby="selectMonthYearModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="selectMonthYearModalLabel">Monthly Report</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Pesan Info -->
        <div class="alert alert-warning" role="alert">
          <i class="fas fa-info-circle"></i> After downloading the database, please select the month and year to generate report.
        </div>

        <form id="selectMonthYearForm" method="GET" action="job.php">
          <div class="form-group">
            <label for="selectReportMonth">Month</label>
            <select class="form-control" id="selectReportMonth" name="month" required>
              <option value="">Select Month</option>
              <?php
              for ($m = 1; $m <= 12; $m++) {
                  $monthName = date('F', mktime(0, 0, 0, $m, 1));
                  $monthValue = str_pad($m, 2, '0', STR_PAD_LEFT); // Format dengan 2 digit
                  echo "<option value=\"$monthValue\">$monthName</option>";
              }
              ?>
            </select>
          </div>
          <div class="form-group">
            <label for="selectReportYear">Year</label>
            <select class="form-control" id="selectReportYear" name="year" required>
              <option value="">Select Year</option>
              <?php
              $currentYear = date("Y");
              for ($y = $currentYear; $y >= $currentYear - 3; $y--) {
                  echo "<option value=\"$y\">$y</option>";
              }
              ?>
            </select>
          </div>
        </form>
      </div> <!-- Tutup modal-body -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="filterReportButton">Display</button>
        
      </div>
    </div>
  </div>
</div>


<!-- Footer -->
<?php include 'footer.php'; ?>

<!-- jQuery -->
<script src="plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables -->
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<!-- AdminLTE App -->
<script src="dist/js/adminlte.min.js"></script>

<script>
  $(document).ready(function () {
    $("#dataTable").DataTable({
      "responsive": false,
      "scrollX": true,
      "autoWidth": false,
      "lengthChange": true,
      "columnDefs": [
        { "width": "100px", "targets": "_all" }
      ]
    }).buttons().container().appendTo('#dataTable_wrapper .col-md-6:eq(0)');

    $('#dataTable').css({
      'table-layout': 'fixed',
      'word-wrap': 'break-word'
    });

    $('#filterButton').click(function () {
      const form = $('#filterForm');
      if (form[0].checkValidity()) {
        // Serialize form data
        const formData = form.serializeArray();
        
        // Get month and year values from the form
        const month = formData.find(item => item.name === 'month').value;
        const year = formData.find(item => item.name === 'year').value;

        // Show a loading message or spinner
        const loadingMessage = $('<p>Loading, please wait...</p>').appendTo('.modal-body');

        // Use AJAX to send the form data
        $.post('process.php', $.param(formData), function (response) {
          // Remove loading message
          loadingMessage.remove();
          // Handle the response
          alert(`Database data (${month} ${year}) successfully exported!`);
          location.reload(); // Reload to reflect changes if needed
        }).fail(function (xhr, status, error) {
          // Remove loading message
          loadingMessage.remove();
          alert('An error occurred: ' + xhr.status + ' ' + error);
        });
      } else {
        alert('Please select both month and year!');
      }
    });
  });

  document.getElementById("filterReportButton").addEventListener("click", function() {
    document.getElementById("selectMonthYearForm").submit();
});

</script>
</body>
</html>

// job.php 243 row

<?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";
    $outputFilePath = $folderPath . "output_entries.xlsx";
    $jobOrderFilePath = $folderPath . "job_order_changes.xlsx";
    $rejectFilePath = $folderPath . "reject_entries.xlsx";
    $toolingChangesFilePath = $folderPath . "tooling_changes.xlsx";
    $toolingTargetsFilePath = $folderPath . "tooling_targets.xlsx";

    if (file_exists($outputFilePath) && file_exists($jobOrderFilePath) && file_exists($rejectFilePath) && file_exists($toolingChangesFilePath) && file_exists($toolingTargetsFilePath)) {
        // Baca file output_entries.xlsx
        $outputSpreadsheet = IOFactory::load($outputFilePath);
        $outputSheet = $outputSpreadsheet->getActiveSheet();
        $outputData = $outputSheet->toArray();

        // Baca file job_order_changes.xlsx
        $jobOrderSpreadsheet = IOFactory::load($jobOrderFilePath);
        $jobOrderSheet = $jobOrderSpreadsheet->getActiveSheet();
        $jobOrderData = $jobOrderSheet->toArray();

        // Baca file reject_entries.xlsx
        $rejectSpreadsheet = IOFactory::load($rejectFilePath);
        $rejectSheet = $rejectSpreadsheet->getActiveSheet();
        $rejectData = $rejectSheet->toArray();

        // Baca file tooling_changes.xlsx
        $toolingSpreadsheet = IOFactory::load($toolingChangesFilePath);
        $toolingSheet = $toolingSpreadsheet->getActiveSheet();
        $toolingData = $toolingSheet->toArray();

        // Baca file tooling_targets.xlsx
        $toolingTargetsSpreadsheet = IOFactory::load($toolingTargetsFilePath);
        $toolingTargetsSheet = $toolingTargetsSpreadsheet->getActiveSheet();
        $toolingTargetsData = $toolingTargetsSheet->toArray();

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }

        // Map job order details
        $jobOrderDetails = [];
        foreach ($jobOrderData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $machineID = $row[2];  // Kolom C (Machine ID)
            $toolingID = $row[3];  // Kolom D (Tooling ID)
            $status = $row[4];     // Kolom E (Status)
            $timestamp = $row[6];  // Kolom G (Timestamp)

            if (!isset($jobOrderDetails[$jobOrderID])) {
                $jobOrderDetails[$jobOrderID] = [
                    'machineID' => $machineID,
                    'toolingID' => $toolingID,
                ];
            }
        }

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate,
                    'jobOrderID' => $jobOrderID,
                    'shift' => $shift,
                    'machineID' => $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A',
                    'toolingID' => $toolingID,
                    'productID' => $productID,
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A',
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A',
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A',
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A',
                    'totalQuantity' => 0,
                    'rejects' => [],
                ];
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }

        // Tampilkan hasil perhitungan
        echo "<table border='1'>";
        echo "<tr><th>PostingDate</th><th>JSNo</th><th>Shift</th><th>Machine ID</th><th>Tooling ID</th><th>Product ID</th><th>Cavity Num</th><th>Cycle Time</th><th>Target Cavity Num</th><th>Target Cycle Time</th><th>Total Quantity</th>";

        // Ambil semua jenis reject untuk header
        $allRejectTypes = [];
        foreach ($results as $entry) {
            foreach (array_keys($entry['rejects']) as $rejectType) {
                if (!in_array($rejectType, $allRejectTypes)) {
                    $allRejectTypes[] = $rejectType;
                }
            }
        }

        foreach ($allRejectTypes as $rejectType) {
            echo "<th>$rejectType</th>";
        }

        echo "<th>Total Reject</th></tr>";

        foreach ($results as $entry) {
            echo "<tr>";
            echo "<td>{$entry['date']}</td>";
            echo "<td>{$entry['jobOrderID']}</td>";
            echo "<td>{$entry['shift']}</td>";
            echo "<td>{$entry['machineID']}</td>";
            echo "<td>{$entry['toolingID']}</td>";
            echo "<td>{$entry['productID']}</td>";
            echo "<td>{$entry['cavityNum']}</td>";
            echo "<td>{$entry['cycleTime']}</td>";
            echo "<td>{$entry['targetCavityNum']}</td>";
            echo "<td>{$entry['targetCycleTime']}</td>";
            echo "<td>{$entry['totalQuantity']}</td>";

            $totalReject = 0;
            foreach ($allRejectTypes as $rejectType) {
                $rejectQty = $entry['rejects'][$rejectType] ?? 0;
                echo "<td>$rejectQty</td>";
                $totalReject += $rejectQty;
            }

            echo "<td>$totalReject</td>";
            echo "</tr>";
        }

        echo "</table>";
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, atau tooling_targets.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";

}
?>


// 563 row


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="dist/img/logo.png" type="image/png">
  <title>Sanwa | View Data</title>

  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body>

<?php include('nav.php'); ?>
<?php include('sidebar.php'); ?>

<div class="content-wrapper">
  <section class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1>Report</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Report</a></li>
            <li class="breadcrumb-item active">Report View</li>
          </ol>
        </div>
      </div>
    </div>
  </section>

  <!-- Main content -->
<section class="content">
  <div class="container-fluid">
    <div class="card">
      <div class="card-header d-flex justify-content-left">
        <!-- Tombol Pilih Bulan dan Tahun -->
        <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#addDatabaseModal">
         <i class="fas fa-download"></i> Export Database
        </button>
        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#selectMonthYearModal">
  <i class="fas fa-calendar-alt"></i> Export Report
</button>

      </div>
        <div class="card-body">
          <table id="dataTable" class="table table-bordered table-striped">
            <thead>
              <tr>
               
              </tr>
            </thead>
            <tbody>
            <?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";
    $outputFilePath = $folderPath . "output_entries.xlsx";
    $jobOrderFilePath = $folderPath . "job_order_changes.xlsx";
    $rejectFilePath = $folderPath . "reject_entries.xlsx";
    $toolingChangesFilePath = $folderPath . "tooling_changes.xlsx";
    $toolingTargetsFilePath = $folderPath . "tooling_targets.xlsx";
    $productsFilePath = $folderPath . "products.xlsx";
    $tonnageFilePath = $folderPath . "tonnage.xlsx";

    if (file_exists($outputFilePath) && file_exists($jobOrderFilePath) && file_exists($rejectFilePath) && file_exists($toolingChangesFilePath) && file_exists($toolingTargetsFilePath) && file_exists($productsFilePath) && file_exists($tonnageFilePath)) {
        // Baca file output_entries.xlsx
        $outputSpreadsheet = IOFactory::load($outputFilePath);
        $outputSheet = $outputSpreadsheet->getActiveSheet();
        $outputData = $outputSheet->toArray();

        // Baca file job_order_changes.xlsx
        $jobOrderSpreadsheet = IOFactory::load($jobOrderFilePath);
        $jobOrderSheet = $jobOrderSpreadsheet->getActiveSheet();
        $jobOrderData = $jobOrderSheet->toArray();

        // Baca file reject_entries.xlsx
        $rejectSpreadsheet = IOFactory::load($rejectFilePath);
        $rejectSheet = $rejectSpreadsheet->getActiveSheet();
        $rejectData = $rejectSheet->toArray();

        // Baca file tooling_changes.xlsx
        $toolingSpreadsheet = IOFactory::load($toolingChangesFilePath);
        $toolingSheet = $toolingSpreadsheet->getActiveSheet();
        $toolingData = $toolingSheet->toArray();

        // Baca file tooling_targets.xlsx
        $toolingTargetsSpreadsheet = IOFactory::load($toolingTargetsFilePath);
        $toolingTargetsSheet = $toolingTargetsSpreadsheet->getActiveSheet();
        $toolingTargetsData = $toolingTargetsSheet->toArray();

        // Baca file products.xlsx
        $productsSpreadsheet = IOFactory::load($productsFilePath);
        $productsSheet = $productsSpreadsheet->getActiveSheet();
        $productsData = $productsSheet->toArray();

        // Baca file tonnage.xlsx
        $tonnageSpreadsheet = IOFactory::load($tonnageFilePath);
        $tonnageSheet = $tonnageSpreadsheet->getActiveSheet();
        $tonnageData = $tonnageSheet->toArray();

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }
// Map job order details
$jobOrderDetails = [];
foreach ($jobOrderData as $index => $row) {
    if ($index == 0) continue; // Lewati header

    $jobOrderID = $row[1]; // Kolom B (Job Order ID)
    $machineID = $row[2];  // Kolom C (Machine ID)
    $toolingID = $row[3];  // Kolom D (Tooling ID)
    $status = $row[4];     // Kolom E (Status)
    $timestamp = $row[6];  // Kolom G (Timestamp)

    // Format ulang tanggal ke d/m/y
    $formattedTimestamp = date('d/m/Y H:i', strtotime($timestamp));

    // Jika jobOrderID belum ada, inisialisasi
    if (!isset($jobOrderDetails[$jobOrderID])) {
        $jobOrderDetails[$jobOrderID] = [
            'machineID' => $machineID,
            'toolingID' => $toolingID,
            'startDate' => $formattedTimestamp, // Tetapkan timestamp pertama sebagai startDate
            'endDate' => 'RUNNING',            // Default endDate adalah RUNNING
        ];
    }

    // Perbarui endDate jika status adalah 'PAUSED' atau 'CLOSED'
    if (in_array($status, ['PAUSED', 'CLOSED'])) {
        $jobOrderDetails[$jobOrderID]['endDate'] = $formattedTimestamp;
    }
}

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Map products untuk mendapatkan customerID dan productName berdasarkan productID
        $productDetails = [];
        foreach ($productsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $productID = $row[0];  // Kolom A (Product ID)
            $customerID = $row[1]; // Kolom B (Customer ID)
            $productName = $row[2]; // Kolom C (Product Name)

            $productDetails[$productID] = [
                'customerID' => $customerID,
                'productName' => $productName,
            ];
        }

        // Map tonnage untuk mendapatkan tonnage berdasarkan machineID
        $machineTonnage = [];
        foreach ($tonnageData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $machineID = $row[0];  // Kolom A (Machine ID)
            $tonnage = $row[1];    // Kolom B (Tonnage)

            $machineTonnage[$machineID] = $tonnage;
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $machineID = $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate, // PostingDate
                    'customerID' => $productDetails[$productID]['customerID'] ?? 'N/A', // CustName
                    'productID' => $productID, // PartNo
                    'productName' => $productDetails[$productID]['productName'] ?? 'N/A', // PartName
                    'toolingID' => $toolingID, // MoldNo
                    'jobOrderID' => $jobOrderID, // JSNo
                    'shift' => $shift, // OprShift
                    'totalQuantity' => 0, // AOutput
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A', // Acavity
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A', // QCV
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A', // QCT
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A', // ACT
                    'ShiftHour' => 7.5, // ShiftHour (default value)
                    'NumOpr' => 1, // NumOpr (default value)
                    'machineID' => $machineID, // ActualMC
                    'tonnage' => $machineTonnage[$machineID] ?? 'N/A', // MCTonnage
                    'startDate' => $jobOrderDetails[$jobOrderID]['startDate'] ?? 'N/A', // StartTime
                    'endDate' => $jobOrderDetails[$jobOrderID]['endDate'] ?? 'N/A', // EndTime
                    'rejects' => [], // Untuk jenis reject
                ];                
                
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }

        // Tampilkan hasil perhitungan
        echo "<table border='1'>";
        echo "<tr><th>PostingDate</th><th>CustName</th><th>PartNo</th><th>PartName</th><th>MoldNo</th><th>JSNo</th><th>OprShift</th><th>AOutput</th><th>Acavity</th><th>QCV</th><th>QCT</th><th>ACT</th><th>ShiftHour</th><th>NumOpr</th><th>ActualMC</th><th>MCTonnage</th><th>StartTime</th><th>EndTime</th>";

        // Ambil semua jenis reject untuk header
        $allRejectTypes = [];
        foreach ($results as $entry) {
            foreach (array_keys($entry['rejects']) as $rejectType) {
                if (!in_array($rejectType, $allRejectTypes)) {
                    $allRejectTypes[] = $rejectType;
                }
            }
        }

        foreach ($allRejectTypes as $rejectType) {
            echo "<th>$rejectType</th>";
        }

        echo "<th>Total Reject</th></tr>";

                // Tampilkan data
        foreach ($results as $entry) {
            echo "<tr>";
            echo "<td>{$entry['date']}</td>"; // PostingDate
            echo "<td>{$entry['customerID']}</td>"; // CustName
            echo "<td>{$entry['productID']}</td>"; // PartNo
            echo "<td>{$entry['productName']}</td>"; // PartName
            echo "<td>{$entry['toolingID']}</td>"; // MoldNo
            echo "<td>{$entry['jobOrderID']}</td>"; // JSNo
            echo "<td>{$entry['shift']}</td>"; // OprShift
            echo "<td>{$entry['totalQuantity']}</td>"; // AOutput
            echo "<td>{$entry['cavityNum']}</td>"; // Acavity
            echo "<td>{$entry['targetCavityNum']}</td>"; // QCV
            echo "<td>{$entry['targetCycleTime']}</td>"; // QCT
            echo "<td>{$entry['cycleTime']}</td>"; // ACT
            echo "<td>{$entry['ShiftHour']}</td>"; // ShiftHour
            echo "<td>{$entry['NumOpr']}</td>"; // NumOpr
            echo "<td>{$entry['machineID']}</td>"; // ActualMC
            echo "<td>{$entry['tonnage']}</td>"; // MCTonnage
            echo "<td>{$entry['startDate']}</td>"; // StartTime
            echo "<td>{$entry['endDate']}</td>"; // EndTime


            $totalReject = 0;
            foreach ($allRejectTypes as $rejectType) {
                $rejectQty = $entry['rejects'][$rejectType] ?? 0;
                echo "<td>$rejectQty</td>";
                $totalReject += $rejectQty;
            }

            echo "<td>$totalReject</td>";
            echo "</tr>";
        }

        echo "</table>";
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, atau tooling_targets.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";

}
?>

            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>
</div>

<!-- Modal Pilih Bulan dan Tahun -->
<div class="modal fade" id="addDatabaseModal" tabindex="-1" role="dialog" aria-labelledby="addDatabaseModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addDatabaseModalLabel">Database Data</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Pesan Info -->
        <div class="alert alert-warning" role="alert">
          <i class="fas fa-info-circle"></i> Before downloading the PTS report, first download the database data.
        </div>

        <form id="filterForm" method="post">
          <div class="form-group">
            <label for="selectMonth">Month</label>
            <select class="form-control" id="selectMonth" name="month" required>
              <option value="">Select Month</option>
              <?php
              for ($m = 1; $m <= 12; $m++) {
                  $monthName = date('F', mktime(0, 0, 0, $m, 1));
                  $monthValue = str_pad($m, 2, '0', STR_PAD_LEFT); // Format dengan 2 digit
                  echo "<option value=\"$monthValue\">$monthName</option>";
              }
              ?>
            </select>
          </div>
          <div class="form-group">
            <label for="selectYear">Year</label>
            <select class="form-control" id="selectYear" name="year" required>
              <option value="">Select Year</option>
              <?php 
                $currentYear = date("Y");
                for ($i = $currentYear; $i >= $currentYear - 3; $i--) {
                  echo "<option value=\"$i\">$i</option>";
                }
              ?>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="filterButton">Export</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Pilih Bulan dan Tahun untuk Laporan -->
<div class="modal fade" id="selectMonthYearModal" tabindex="-1" role="dialog" aria-labelledby="selectMonthYearModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="selectMonthYearModalLabel">Monthly Report</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Pesan Info -->
        <div class="alert alert-warning" role="alert">
          <i class="fas fa-info-circle"></i> After downloading the database, please select the month and year to generate report.
        </div>

        <form id="selectMonthYearForm" method="GET" action="job.php">
          <div class="form-group">
            <label for="selectReportMonth">Month</label>
            <select class="form-control" id="selectReportMonth" name="month" required>
              <option value="">Select Month</option>
              <?php
              for ($m = 1; $m <= 12; $m++) {
                  $monthName = date('F', mktime(0, 0, 0, $m, 1));
                  $monthValue = str_pad($m, 2, '0', STR_PAD_LEFT); // Format dengan 2 digit
                  echo "<option value=\"$monthValue\">$monthName</option>";
              }
              ?>
            </select>
          </div>
          <div class="form-group">
            <label for="selectReportYear">Year</label>
            <select class="form-control" id="selectReportYear" name="year" required>
              <option value="">Select Year</option>
              <?php
              $currentYear = date("Y");
              for ($y = $currentYear; $y >= $currentYear - 3; $y--) {
                  echo "<option value=\"$y\">$y</option>";
              }
              ?>
            </select>
          </div>
        </form>
      </div> <!-- Tutup modal-body -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="filterReportButton">Display</button>
        
      </div>
    </div>
  </div>
</div>


<!-- Footer -->
<?php include 'footer.php'; ?>

<!-- jQuery -->
<script src="plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables -->
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<!-- AdminLTE App -->
<script src="dist/js/adminlte.min.js"></script>

<script>
  $(document).ready(function () {
    $("#dataTable").DataTable({
      "responsive": false,
      "scrollX": true,
      "autoWidth": false,
      "lengthChange": true,
      "columnDefs": [
        { "width": "100px", "targets": "_all" }
      ]
    }).buttons().container().appendTo('#dataTable_wrapper .col-md-6:eq(0)');

    $('#dataTable').css({
      'table-layout': 'fixed',
      'word-wrap': 'break-word'
    });

    $('#filterButton').click(function () {
      const form = $('#filterForm');
      if (form[0].checkValidity()) {
        // Serialize form data
        const formData = form.serializeArray();
        
        // Get month and year values from the form
        const month = formData.find(item => item.name === 'month').value;
        const year = formData.find(item => item.name === 'year').value;

        // Show a loading message or spinner
        const loadingMessage = $('<p>Loading, please wait...</p>').appendTo('.modal-body');

        // Use AJAX to send the form data
        $.post('process.php', $.param(formData), function (response) {
          // Remove loading message
          loadingMessage.remove();
          // Handle the response
          alert(`Database data (${month} ${year}) successfully exported!`);
          location.reload(); // Reload to reflect changes if needed
        }).fail(function (xhr, status, error) {
          // Remove loading message
          loadingMessage.remove();
          alert('An error occurred: ' + xhr.status + ' ' + error);
        });
      } else {
        alert('Please select both month and year!');
      }
    });
  });

  document.getElementById("filterReportButton").addEventListener("click", function() {
    document.getElementById("selectMonthYearForm").submit();
});

</script>
</body>
</html>


// row 299

<?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk membaca file Excel
function readExcelFile($filePath) {
    if (file_exists($filePath)) {
        $spreadsheet = IOFactory::load($filePath);
        $sheet = $spreadsheet->getActiveSheet();
        return $sheet->toArray();
    }
    return null;
}

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";

    // Path file Excel
    $filePaths = [
        'output' => $folderPath . "output_entries.xlsx",
        'jobOrder' => $folderPath . "job_order_changes.xlsx",
        'reject' => $folderPath . "reject_entries.xlsx",
        'toolingChanges' => $folderPath . "tooling_changes.xlsx",
        'toolingTargets' => $folderPath . "tooling_targets.xlsx",
        'products' => $folderPath . "products.xlsx",
        'tonnage' => $folderPath . "tonnage.xlsx",
    ];

    // Membaca semua file Excel menggunakan fungsi readExcelFile
    $outputData = readExcelFile($filePaths['output']);
    $jobOrderData = readExcelFile($filePaths['jobOrder']);
    $rejectData = readExcelFile($filePaths['reject']);
    $toolingData = readExcelFile($filePaths['toolingChanges']);
    $toolingTargetsData = readExcelFile($filePaths['toolingTargets']);
    $productsData = readExcelFile($filePaths['products']);
    $tonnageData = readExcelFile($filePaths['tonnage']);

      // Pastikan data sudah dibaca dengan benar
      if ($outputData && $jobOrderData && $rejectData && $toolingData && $toolingTargetsData && $productsData && $tonnageData) {

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }
// Map job order details
$jobOrderDetails = [];
foreach ($jobOrderData as $index => $row) {
    if ($index == 0) continue; // Lewati header

    $jobOrderID = $row[1]; // Kolom B (Job Order ID)
    $machineID = $row[2];  // Kolom C (Machine ID)
    $toolingID = $row[3];  // Kolom D (Tooling ID)
    $status = $row[4];     // Kolom E (Status)
    $timestamp = $row[6];  // Kolom G (Timestamp)

    // Format ulang tanggal ke d/m/y
    $formattedTimestamp = date('d/m/Y H:i', strtotime($timestamp));

    // Jika jobOrderID belum ada, inisialisasi
    if (!isset($jobOrderDetails[$jobOrderID])) {
        $jobOrderDetails[$jobOrderID] = [
            'machineID' => $machineID,
            'toolingID' => $toolingID,
            'startDate' => $formattedTimestamp, // Tetapkan timestamp pertama sebagai startDate
            'endDate' => 'RUNNING',            // Default endDate adalah RUNNING
        ];
    }

    // Perbarui endDate jika status adalah 'PAUSED' atau 'CLOSED'
    if (in_array($status, ['PAUSED', 'CLOSED'])) {
        $jobOrderDetails[$jobOrderID]['endDate'] = $formattedTimestamp;
    }
}

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Map products untuk mendapatkan customerID dan productName berdasarkan productID
        $productDetails = [];
        foreach ($productsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $productID = $row[0];  // Kolom A (Product ID)
            $customerID = $row[1]; // Kolom B (Customer ID)
            $productName = $row[2]; // Kolom C (Product Name)

            $productDetails[$productID] = [
                'customerID' => $customerID,
                'productName' => $productName,
            ];
        }

        // Map tonnage untuk mendapatkan tonnage berdasarkan machineID
        $machineTonnage = [];
        foreach ($tonnageData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $machineID = $row[0];  // Kolom A (Machine ID)
            $tonnage = $row[1];    // Kolom B (Tonnage)

            $machineTonnage[$machineID] = $tonnage;
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $machineID = $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate, // PostingDate
                    'customerID' => $productDetails[$productID]['customerID'] ?? 'N/A', // CustName
                    'productID' => $productID, // PartNo
                    'productName' => $productDetails[$productID]['productName'] ?? 'N/A', // PartName
                    'toolingID' => $toolingID, // MoldNo
                    'jobOrderID' => $jobOrderID, // JSNo
                    'shift' => $shift, // OprShift
                    'totalQuantity' => 0, // AOutput
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A', // Acavity
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A', // QCV
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A', // QCT
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A', // ACT
                    'ShiftHour' => 7.5, // ShiftHour (default value)
                    'NumOpr' => 1, // NumOpr (default value)
                    'machineID' => $machineID, // ActualMC
                    'tonnage' => $machineTonnage[$machineID] ?? 'N/A', // MCTonnage
                    'startDate' => $jobOrderDetails[$jobOrderID]['startDate'] ?? 'N/A', // StartTime
                    'endDate' => $jobOrderDetails[$jobOrderID]['endDate'] ?? 'N/A', // EndTime
                    'rejects' => [], // Untuk jenis reject
                ];                
                
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }

        // Tampilkan hasil perhitungan
        echo "<table border='1'>";
        echo "<tr><th>PostingDate</th><th>CustName</th><th>PartNo</th><th>PartName</th><th>MoldNo</th><th>JSNo</th><th>OprShift</th><th>AOutput</th><th>Acavity</th><th>QCV</th><th>QCT</th><th>ACT</th><th>ShiftHour</th><th>NumOpr</th><th>ActualMC</th><th>MCTonnage</th><th>StartTime</th><th>EndTime</th>";

        // Ambil semua jenis reject untuk header
        $allRejectTypes = [];
        foreach ($results as $entry) {
            foreach (array_keys($entry['rejects']) as $rejectType) {
                if (!in_array($rejectType, $allRejectTypes)) {
                    $allRejectTypes[] = $rejectType;
                }
            }
        }

        foreach ($allRejectTypes as $rejectType) {
            echo "<th>$rejectType</th>";
        }

        echo "<th>Total Reject</th></tr>";

                // Tampilkan data
        foreach ($results as $entry) {
            echo "<tr>";
            echo "<td>{$entry['date']}</td>"; // PostingDate
            echo "<td>{$entry['customerID']}</td>"; // CustName
            echo "<td>{$entry['productID']}</td>"; // PartNo
            echo "<td>{$entry['productName']}</td>"; // PartName
            echo "<td>{$entry['toolingID']}</td>"; // MoldNo
            echo "<td>{$entry['jobOrderID']}</td>"; // JSNo
            echo "<td>{$entry['shift']}</td>"; // OprShift
            echo "<td>{$entry['totalQuantity']}</td>"; // AOutput
            echo "<td>{$entry['cavityNum']}</td>"; // Acavity
            echo "<td>{$entry['targetCavityNum']}</td>"; // QCV
            echo "<td>{$entry['targetCycleTime']}</td>"; // QCT
            echo "<td>{$entry['cycleTime']}</td>"; // ACT
            echo "<td>{$entry['ShiftHour']}</td>"; // ShiftHour
            echo "<td>{$entry['NumOpr']}</td>"; // NumOpr
            echo "<td>{$entry['machineID']}</td>"; // ActualMC
            echo "<td>{$entry['tonnage']}</td>"; // MCTonnage
            echo "<td>{$entry['startDate']}</td>"; // StartTime
            echo "<td>{$entry['endDate']}</td>"; // EndTime


            $totalReject = 0;
            foreach ($allRejectTypes as $rejectType) {
                $rejectQty = $entry['rejects'][$rejectType] ?? 0;
                echo "<td>$rejectQty</td>";
                $totalReject += $rejectQty;
            }

            echo "<td>$totalReject</td>";
            echo "</tr>";
        }

        echo "</table>";
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, atau tooling_targets.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";

}
?>


// row 245 no echo

<?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk membaca file Excel
function readExcelFile($filePath) {
    if (file_exists($filePath)) {
        $spreadsheet = IOFactory::load($filePath);
        $sheet = $spreadsheet->getActiveSheet();
        return $sheet->toArray();
    }
    return null;
}

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";

    // Path file Excel
    $filePaths = [
        'output' => $folderPath . "output_entries.xlsx",
        'jobOrder' => $folderPath . "job_order_changes.xlsx",
        'reject' => $folderPath . "reject_entries.xlsx",
        'toolingChanges' => $folderPath . "tooling_changes.xlsx",
        'toolingTargets' => $folderPath . "tooling_targets.xlsx",
        'products' => $folderPath . "products.xlsx",
        'tonnage' => $folderPath . "tonnage.xlsx",
    ];

    // Membaca semua file Excel menggunakan fungsi readExcelFile
    $outputData = readExcelFile($filePaths['output']);
    $jobOrderData = readExcelFile($filePaths['jobOrder']);
    $rejectData = readExcelFile($filePaths['reject']);
    $toolingData = readExcelFile($filePaths['toolingChanges']);
    $toolingTargetsData = readExcelFile($filePaths['toolingTargets']);
    $productsData = readExcelFile($filePaths['products']);
    $tonnageData = readExcelFile($filePaths['tonnage']);

      // Pastikan data sudah dibaca dengan benar
      if ($outputData && $jobOrderData && $rejectData && $toolingData && $toolingTargetsData && $productsData && $tonnageData) {

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }
// Map job order details
$jobOrderDetails = [];
foreach ($jobOrderData as $index => $row) {
    if ($index == 0) continue; // Lewati header

    $jobOrderID = $row[1]; // Kolom B (Job Order ID)
    $machineID = $row[2];  // Kolom C (Machine ID)
    $toolingID = $row[3];  // Kolom D (Tooling ID)
    $status = $row[4];     // Kolom E (Status)
    $timestamp = $row[6];  // Kolom G (Timestamp)

    // Format ulang tanggal ke d/m/y
    $formattedTimestamp = date('d/m/Y H:i', strtotime($timestamp));

    // Jika jobOrderID belum ada, inisialisasi
    if (!isset($jobOrderDetails[$jobOrderID])) {
        $jobOrderDetails[$jobOrderID] = [
            'machineID' => $machineID,
            'toolingID' => $toolingID,
            'startDate' => $formattedTimestamp, // Tetapkan timestamp pertama sebagai startDate
            'endDate' => 'RUNNING',            // Default endDate adalah RUNNING
        ];
    }

    // Perbarui endDate jika status adalah 'PAUSED' atau 'CLOSED'
    if (in_array($status, ['PAUSED', 'CLOSED'])) {
        $jobOrderDetails[$jobOrderID]['endDate'] = $formattedTimestamp;
    }
}

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Map products untuk mendapatkan customerID dan productName berdasarkan productID
        $productDetails = [];
        foreach ($productsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $productID = $row[0];  // Kolom A (Product ID)
            $customerID = $row[1]; // Kolom B (Customer ID)
            $productName = $row[2]; // Kolom C (Product Name)

            $productDetails[$productID] = [
                'customerID' => $customerID,
                'productName' => $productName,
            ];
        }

        // Map tonnage untuk mendapatkan tonnage berdasarkan machineID
        $machineTonnage = [];
        foreach ($tonnageData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $machineID = $row[0];  // Kolom A (Machine ID)
            $tonnage = $row[1];    // Kolom B (Tonnage)

            $machineTonnage[$machineID] = $tonnage;
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $machineID = $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate, // PostingDate
                    'customerID' => $productDetails[$productID]['customerID'] ?? 'N/A', // CustName
                    'productID' => $productID, // PartNo
                    'productName' => $productDetails[$productID]['productName'] ?? 'N/A', // PartName
                    'toolingID' => $toolingID, // MoldNo
                    'jobOrderID' => $jobOrderID, // JSNo
                    'shift' => $shift, // OprShift
                    'totalQuantity' => 0, // AOutput
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A', // Acavity
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A', // QCV
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A', // QCT
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A', // ACT
                    'ShiftHour' => 7.5, // ShiftHour (default value)
                    'NumOpr' => 1, // NumOpr (default value)
                    'machineID' => $machineID, // ActualMC
                    'tonnage' => $machineTonnage[$machineID] ?? 'N/A', // MCTonnage
                    'startDate' => $jobOrderDetails[$jobOrderID]['startDate'] ?? 'N/A', // StartTime
                    'endDate' => $jobOrderDetails[$jobOrderID]['endDate'] ?? 'N/A', // EndTime
                    'rejects' => [], // Untuk jenis reject
                ];                
                
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }

        
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, atau tooling_targets.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";

}
?>


// code sikit

<?php include('job.php'); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Order Report</title>
    <!-- Google Font: Source Sans Pro -->
 <!-- Stylesheets -->
 <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body class="hold-transition sidebar-mini">
<div class="wrapper">
    <div class="content-wrapper">
        <section class="content">
            <div class="container-fluid">
                <h1 class="my-4">Job Order Report</h1>
                <div class="card">
                    <div class="card-body">
                        <table id="jobOrderTable" class="table table-bordered table-striped">
                            <thead>
                            <tr>
    <th>Date</th>
    <th>Customer ID</th>
    <th>Product ID</th>
    <th>Product Name</th>
    <th>Tooling ID</th>
    <th>Job Order ID</th>
    <th>Shift</th>
    <th>Total Quantity</th>
    <th>Cavity Number</th>
    <th>Target Cavity Number</th>
    <th>Target Cycle Time</th>
    <th>Cycle Time</th>
    <th>Shift Hours</th>
    <th>Num Operators</th>
    <th>Machine ID</th>
    <th>Tonnage</th>
    <th>Start Time</th>
    <th>End Time</th>
    <th>Silver Streak</th>
    <th>Short Molding</th>
    <th>Black Dot</th>
    <th>Weld Line</th>
</tr>
</thead>
<tbody>
    <?php if (!empty($results)): ?>
        <?php foreach ($results as $key => $data): ?>
            <tr>
                <td><?= htmlspecialchars($data['date']) ?></td>
                <td><?= htmlspecialchars($data['customerID']) ?></td>
                <td><?= htmlspecialchars($data['productID']) ?></td>
                <td><?= htmlspecialchars($data['productName']) ?></td>
                <td><?= htmlspecialchars($data['toolingID']) ?></td>
                <td><?= htmlspecialchars($data['jobOrderID']) ?></td>
                <td><?= htmlspecialchars($data['shift']) ?></td>
                <td><?= htmlspecialchars(number_format($data['totalQuantity'], 0, '.', '.')) ?></td>
                <td><?= htmlspecialchars($data['cavityNum']) ?></td>
                <td><?= htmlspecialchars($data['targetCavityNum']) ?></td>
                <td><?= htmlspecialchars($data['targetCycleTime']) ?></td>
                <td><?= htmlspecialchars($data['cycleTime']) ?></td>
                <td><?= htmlspecialchars($data['ShiftHour']) ?></td>
                <td><?= htmlspecialchars($data['NumOpr']) ?></td>
                <td><?= htmlspecialchars($data['machineID']) ?></td>
                <td><?= htmlspecialchars($data['tonnage']) ?></td>
                <td><?= htmlspecialchars($data['startDate']) ?></td>
                <td><?= htmlspecialchars($data['endDate']) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Silver Streak'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Short Molding'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Black Dot'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Weld Line'] ?? 0) ?></td>
            </tr>
        <?php endforeach; ?>
    <?php else: ?>
        <tr>
            <td colspan="22" style="text-align: center;">No data available</td>
        </tr>
    <?php endif; ?>
</tbody>

                        </table>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<!-- Scripts -->
<script src="plugins/jquery/jquery.min.js"></script>
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="dist/js/adminlte.min.js"></script>

<script>
   $(document).ready(function() {
    $('#jobOrderTable').DataTable({
        scrollX: true,
        autoWidth: false,
        lengthChange: true,
        searching: true,
        paging: true,
        info: true,
        buttons: [
            {
                extend: "excelHtml5",
                text: "Excel",
                exportOptions: {
                    columns: ':visible', // Ekspor hanya kolom yang terlihat
                    format: {
                        body: function(data, row, column, node) {
                            // Hapus format titik atau koma untuk kolom "Total Quantity"
                            return column === 7 ? data.replace(/\./g, '').replace(/,/g, '') : data;
                        }
                    }
                }
            },
            "csv", "copy", "print"
        ]
    }).buttons().container().appendTo('#jobOrderTable_wrapper .col-md-6:eq(0)');
});

</script>
</body>
</html>





/////

<td><?= htmlspecialchars($data['rejects']['Silver Streak'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Short Molding'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Dented'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Sink Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Burn Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Buble'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Black Dot'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Scratches'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Flow Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Dim Out'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Discolouration'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Shiny'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['White M'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Flahes'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Drag Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Oily Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Over Cut'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Pin Mark'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Wrinkle'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Weld Line'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Pin broken'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Damage'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Metal Chip'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Crack'] ?? 0) ?></td>
                <td><?= htmlspecialchars($data['rejects']['Part Drop to Floor'] ?? 0) ?></td>


// 248 row view

<?php include('job.php'); ?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="dist/img/logo.png" type="image/png">
  <title>Sanwa | View Data</title>

  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body>

<?php include('nav.php'); ?>
<?php include('sidebar.php'); ?>

<div class="content-wrapper">
  <section class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1>Report</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Report</a></li>
            <li class="breadcrumb-item active">Report View</li>
          </ol>
        </div>
      </div>
    </div>
  </section>

  <section class="content">
    <div class="card">
      <div class="card-body">
        <table id="jobOrderTable" class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>PostingDate</th>
              <th>CustName</th>
              <th>PartNo</th>
              <th>PartName</th>
              <th>MoldNo</th>
              <th>JSNo</th>
              <th>OprShift</th>
              <th>AOutput</th>
              <th>ACavity</th>
              <th>QCV</th>
              <th>QCT</th>
              <th>ACT</th>
              <th>ShiftHours</th>
              <th>NumOpr</th>
              <th>ActualMC</th>
              <th>MCTonnage</th>
              <th>Start Time</th>
              <th>End Time</th>
              <th>Silver Streak</th>
              <th>Short Molding</th>
              <th>Dented</th>
              <th>Sink Mark</th>
              <th>Burn Mark</th>
              <th>Buble</th>
              <th>Black Dot</th>
              <th>Scratches</th>
              <th>Flow Mark</th>
              <th>Dim Out</th>
              <th>Discolouration</th>
              <th>Shiny</th>
              <th>White Mark</th>
              <th>Flashes</th>
              <th>Drag Mark</th>
              <th>Oily Mark</th>
              <th>Over Cut</th>
              <th>Pin Mark</th>
              <th>Wrinkle</th>
              <th>Weld Line</th>
              <th>Pin Broken</th>
              <th>Damage</th>
              <th>Metal Chip</th>
              <th>Crack</th>
              <th>Part Drop to Floor</th>
              <th>Total Reject</th>
              
            </tr>
          </thead>
          <tbody>
            <?php if (!empty($results)): ?>
              <?php foreach ($results as $data): ?>
                <tr>
                  <td><?= htmlspecialchars($data['date'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['customerID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['productID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['productName'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['toolingID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['jobOrderID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['shift'] ?? '-') ?></td>
                  <td><?= htmlspecialchars(number_format($data['totalQuantity'] ?? 0)) ?></td>
                  <td><?= htmlspecialchars($data['cavityNum'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['targetCavityNum'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['targetCycleTime'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['cycleTime'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['ShiftHour'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['NumOpr'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['machineID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['tonnage'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['startDate'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['endDate'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Silver Streak'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Short Molding'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Dented'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Sink Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Burn Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Buble'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Black Dot'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Scratches'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Flow Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Dim Out'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Discolouration'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Shiny'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['White M'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Flahes'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Drag Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Oily Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Over Cut'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Pin Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Wrinkle'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Weld Line'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Pin broken'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Damage'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Metal Chip'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Crack'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Part Drop to Floor'] ?? 0) ?></td>
                  <td><?= htmlspecialchars(array_sum($data['rejects'] ?? [])) ?></td>
                </tr>
              <?php endforeach; ?>
            <?php else: ?>
              <tr>
                <td colspan="43" style="text-align: center;">No data available</td>
              </tr>
            <?php endif; ?>
          </tbody>
        </table>
      </div>
    </div>
  </section>
</div>

<!-- Footer -->
<?php include 'footer.php'; ?>

<!-- Scripts -->
<script src="plugins/jquery/jquery.min.js"></script>
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="dist/js/adminlte.min.js"></script>

<script>
   $(document).ready(function() {
    $('#jobOrderTable').DataTable({
        scrollX: true,
        autoWidth: false,
        lengthChange: true,
        searching: true,
        paging: true,
        info: true,
        buttons: [
            {
                extend: "excelHtml5",
                text: "Excel",
                exportOptions: {
                    columns: ':visible', // Ekspor hanya kolom yang terlihat
                    format: {
                        body: function(data, row, column, node) {
                            // Hapus format titik atau koma untuk kolom "Total Quantity"
                            return column === 7 ? data.replace(/\./g, '').replace(/,/g, '') : data;
                        }
                    }
                }
            },
            "csv", "copy", "print"
        ]
    }).buttons().container().appendTo('#jobOrderTable_wrapper .col-md-6:eq(0)');
});

$('#dataTable').css({
      'table-layout': 'fixed',
      'word-wrap': 'break-word'
    });

    $('#filterButton').click(function () {
      const form = $('#filterForm');
      if (form[0].checkValidity()) {
        // Serialize form data
        const formData = form.serializeArray();
        
        // Get month and year values from the form
        const month = formData.find(item => item.name === 'month').value;
        const year = formData.find(item => item.name === 'year').value;

        // Show a loading message or spinner
        const loadingMessage = $('<p>Loading, please wait...</p>').appendTo('.modal-body');

        // Use AJAX to send the form data
        $.post('process.php', $.param(formData), function (response) {
          // Remove loading message
          loadingMessage.remove();
          // Handle the response
          alert(`Database data (${month} ${year}) successfully exported!`);
          location.reload(); // Reload to reflect changes if needed
        }).fail(function (xhr, status, error) {
          // Remove loading message
          loadingMessage.remove();
          alert('An error occurred: ' + xhr.status + ' ' + error);
        });
      } else {
        alert('Please select both month and year!');
      }
    });
  

  document.getElementById("filterReportButton").addEventListener("click", function() {
    document.getElementById("selectMonthYearForm").submit();
});

</script>
</body>
</html>

// 245 row process

<?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk membaca file Excel
function readExcelFile($filePath) {
    if (file_exists($filePath)) {
        $spreadsheet = IOFactory::load($filePath);
        $sheet = $spreadsheet->getActiveSheet();
        return $sheet->toArray();
    }
    return null;
}

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";

    // Path file Excel
    $filePaths = [
        'output' => $folderPath . "output_entries.xlsx",
        'jobOrder' => $folderPath . "job_order_changes.xlsx",
        'reject' => $folderPath . "reject_entries.xlsx",
        'toolingChanges' => $folderPath . "tooling_changes.xlsx",
        'toolingTargets' => $folderPath . "tooling_targets.xlsx",
        'products' => $folderPath . "products.xlsx",
        'tonnage' => $folderPath . "tonnage.xlsx",
    ];

    // Membaca semua file Excel menggunakan fungsi readExcelFile
    $outputData = readExcelFile($filePaths['output']);
    $jobOrderData = readExcelFile($filePaths['jobOrder']);
    $rejectData = readExcelFile($filePaths['reject']);
    $toolingData = readExcelFile($filePaths['toolingChanges']);
    $toolingTargetsData = readExcelFile($filePaths['toolingTargets']);
    $productsData = readExcelFile($filePaths['products']);
    $tonnageData = readExcelFile($filePaths['tonnage']);

      // Pastikan data sudah dibaca dengan benar
      if ($outputData && $jobOrderData && $rejectData && $toolingData && $toolingTargetsData && $productsData && $tonnageData) {

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }
// Map job order details
$jobOrderDetails = [];
foreach ($jobOrderData as $index => $row) {
    if ($index == 0) continue; // Lewati header

    $jobOrderID = $row[1]; // Kolom B (Job Order ID)
    $machineID = $row[2];  // Kolom C (Machine ID)
    $toolingID = $row[3];  // Kolom D (Tooling ID)
    $status = $row[4];     // Kolom E (Status)
    $timestamp = $row[6];  // Kolom G (Timestamp)

    // Format ulang tanggal ke d/m/y
    $formattedTimestamp = date('d/m/Y H:i', strtotime($timestamp));

    // Jika jobOrderID belum ada, inisialisasi
    if (!isset($jobOrderDetails[$jobOrderID])) {
        $jobOrderDetails[$jobOrderID] = [
            'machineID' => $machineID,
            'toolingID' => $toolingID,
            'startDate' => $formattedTimestamp, // Tetapkan timestamp pertama sebagai startDate
            'endDate' => 'RUNNING',            // Default endDate adalah RUNNING
        ];
    }

    // Perbarui endDate jika status adalah 'PAUSED' atau 'CLOSED'
    if (in_array($status, ['PAUSED', 'CLOSED'])) {
        $jobOrderDetails[$jobOrderID]['endDate'] = $formattedTimestamp;
    }
}

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Map products untuk mendapatkan customerID dan productName berdasarkan productID
        $productDetails = [];
        foreach ($productsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $productID = $row[0];  // Kolom A (Product ID)
            $customerID = $row[1]; // Kolom B (Customer ID)
            $productName = $row[2]; // Kolom C (Product Name)

            $productDetails[$productID] = [
                'customerID' => $customerID,
                'productName' => $productName,
            ];
        }

        // Map tonnage untuk mendapatkan tonnage berdasarkan machineID
        $machineTonnage = [];
        foreach ($tonnageData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $machineID = $row[0];  // Kolom A (Machine ID)
            $tonnage = $row[1];    // Kolom B (Tonnage)

            $machineTonnage[$machineID] = $tonnage;
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $machineID = $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate, // PostingDate
                    'customerID' => $productDetails[$productID]['customerID'] ?? 'N/A', // CustName
                    'productID' => $productID, // PartNo
                    'productName' => $productDetails[$productID]['productName'] ?? 'N/A', // PartName
                    'toolingID' => $toolingID, // MoldNo
                    'jobOrderID' => $jobOrderID, // JSNo
                    'shift' => $shift, // OprShift
                    'totalQuantity' => 0, // AOutput
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A', // Acavity
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A', // QCV
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A', // QCT
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A', // ACT
                    'ShiftHour' => 7.5, // ShiftHour (default value)
                    'NumOpr' => 1, // NumOpr (default value)
                    'machineID' => $machineID, // ActualMC
                    'tonnage' => $machineTonnage[$machineID] ?? 'N/A', // MCTonnage
                    'startDate' => $jobOrderDetails[$jobOrderID]['startDate'] ?? 'N/A', // StartTime
                    'endDate' => $jobOrderDetails[$jobOrderID]['endDate'] ?? 'N/A', // EndTime
                    'rejects' => [], // Untuk jenis reject
                ];                
                
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }

        
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, atau tooling_targets.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";

}
?>


/////


 <th>NPO</th>
              <th>TPM</th>
              <th>MOC</th>
              <th>T</th>
              <th>MSSD</th>
              <th>DMC</th>
              <th>NMP</th>
              <th>PA</th>
              <th>QP</th>
              <th>MB</th>
              <th>PM</th>
              <th>MOR1</th>
              <th>MOR2</th>
              <th>Total Downtime</th>



 <td><?= htmlspecialchars($data['downtimeReasons']['NPO'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['TPM'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOC'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['T'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MSSD'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['DMC'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['NMP'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['PA'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['QP'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MB'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['PM'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOR1'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOR2'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtime'] ?? 0) ?></td>




//// row 281 view

<?php include('job.php'); ?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="dist/img/logo.png" type="image/png">
  <title>Sanwa | View Data</title>

  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
  <link rel="stylesheet" href="plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="dist/css/adminlte.min.css">
</head>
<body>

<?php include('nav.php'); ?>
<?php include('sidebar.php'); ?>

<div class="content-wrapper">
  <section class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1>Report</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Report</a></li>
            <li class="breadcrumb-item active">Report View</li>
          </ol>
        </div>
      </div>
    </div>
  </section>

  <section class="content">
    <div class="card">
      <div class="card-body">
        <table id="jobOrderTable" class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>PostingDate</th>
              <th>CustName</th>
              <th>PartNo</th>
              <th>PartName</th>
              <th>MoldNo</th>
              <th>JSNo</th>
              <th>OprShift</th>
              <th>AOutput</th>
              <th>ACavity</th>
              <th>QCV</th>
              <th>QCT</th>
              <th>ACT</th>
              <th>ShiftHours</th>
              <th>NumOpr</th>
              <th>ActualMC</th>
              <th>MCTonnage</th>
              <th>Start Time</th>
              <th>End Time</th>
              <th>Silver Streak</th>
              <th>Short Molding</th>
              <th>Dented</th>
              <th>Sink Mark</th>
              <th>Burn Mark</th>
              <th>Bubble</th>
              <th>Black Dot</th>
              <th>Scratches</th>
              <th>Flow Mark</th>
              <th>Dim Out</th>
              <th>Discolouration</th>
              <th>Shiny</th>
              <th>White Mark</th>
              <th>Flashes</th>
              <th>Drag Mark</th>
              <th>Oily Mark</th>
              <th>Over Cut</th>
              <th>Pin Mark</th>
              <th>Wrinkle</th>
              <th>Weld Line</th>
              <th>Pin Broken</th>
              <th>Damage</th>
              <th>Metal Chip</th>
              <th>Crack</th>
              <th>Part Drop to Floor</th>
              <th>Total Reject</th>
              <th>NPO</th>
              <th>TPM</th>
              <th>MOC</th>
              <th>T</th>
              <th>MSSD</th>
              <th>DMC</th>
              <th>NMP</th>
              <th>PA</th>
              <th>QP</th>
              <th>MB</th>
              <th>PM</th>
              <th>MOR1</th>
              <th>MOR2</th>
              <th>JOS</th>
              <th>EOS</th>
              <th>Total Downtime</th>
              
              
            </tr>
          </thead>
          <tbody>
            <?php if (!empty($results)): ?>
              <?php foreach ($results as $data): ?>
                <tr>
                  <td><?= htmlspecialchars($data['date'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['customerID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['productID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['productName'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['toolingID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['jobOrderID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['shift'] ?? '-') ?></td>
                  <td><?= htmlspecialchars(number_format($data['totalQuantity'], 0, '.', '.')) ?></td>
                  <td><?= htmlspecialchars($data['cavityNum'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['targetCavityNum'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['targetCycleTime'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['cycleTime'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['ShiftHour'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['NumOpr'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['machineID'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['tonnage'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['startDate'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['endDate'] ?? '-') ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Silver Streak'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Short Molding'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Dented'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Sink Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Burn Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Buble'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Black Dot'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Scratches'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Flow Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Dim Out'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Discolouration'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Shiny'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['White M'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Flahes'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Drag Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Oily Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Over Cut'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Pin Mark'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Wrinkle'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Weld Line'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Pin broken'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Damage'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Metal Chip'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Crack'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['rejects']['Part Drop to Floor'] ?? 0) ?></td>
                  <td><?= htmlspecialchars(array_sum($data['rejects'] ?? [])) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['NPO'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['TPM'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOC'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['T'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MS/SD'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['DMC'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['NMP'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['PA'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['QP'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MB'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['PM'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOR1'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['MOR2'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['JOS'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtimeReasons']['EOS'] ?? 0) ?></td>
                  <td><?= htmlspecialchars($data['downtime'] ?? 0) ?></td>
                </tr>
              <?php endforeach; ?>
            <?php else: ?>
              <tr>
                <td colspan="43" style="text-align: center;">No data available</td>
              </tr>
            <?php endif; ?>
          </tbody>
        </table>
      </div>
    </div>
  </section>
</div>

<!-- Footer -->
<?php include 'footer.php'; ?>

<!-- Scripts -->
<script src="plugins/jquery/jquery.min.js"></script>
<script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="plugins/datatables/jquery.dataTables.min.js"></script>
<script src="plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="plugins/jszip/jszip.min.js"></script>
<script src="plugins/pdfmake/pdfmake.min.js"></script>
<script src="plugins/pdfmake/vfs_fonts.js"></script>
<script src="plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="dist/js/adminlte.min.js"></script>

<script>
   $(document).ready(function() {
    $('#jobOrderTable').DataTable({
        scrollX: true,
        autoWidth: false,
        lengthChange: true,
        searching: true,
        paging: true,
        info: true,
        buttons: [
            {
                extend: "excelHtml5",
                text: "Excel",
                exportOptions: {
                    columns: ':visible', // Ekspor hanya kolom yang terlihat
                    format: {
                        body: function(data, row, column, node) {
                            // Hapus format titik atau koma untuk kolom "Total Quantity"
                            return column === 7 ? data.replace(/\./g, '').replace(/,/g, '') : data;
                        }
                    }
                }
            },
            "csv", "copy", "print"
        ]
    }).buttons().container().appendTo('#jobOrderTable_wrapper .col-md-6:eq(0)');
});

$('#dataTable').css({
      'table-layout': 'fixed',
      'word-wrap': 'break-word'
    });

    $('#filterButton').click(function () {
      const form = $('#filterForm');
      if (form[0].checkValidity()) {
        // Serialize form data
        const formData = form.serializeArray();
        
        // Get month and year values from the form
        const month = formData.find(item => item.name === 'month').value;
        const year = formData.find(item => item.name === 'year').value;

        // Show a loading message or spinner
        const loadingMessage = $('<p>Loading, please wait...</p>').appendTo('.modal-body');

        // Use AJAX to send the form data
        $.post('process.php', $.param(formData), function (response) {
          // Remove loading message
          loadingMessage.remove();
          // Handle the response
          alert(`Database data (${month} ${year}) successfully exported!`);
          location.reload(); // Reload to reflect changes if needed
        }).fail(function (xhr, status, error) {
          // Remove loading message
          loadingMessage.remove();
          alert('An error occurred: ' + xhr.status + ' ' + error);
        });
      } else {
        alert('Please select both month and year!');
      }
    });
  

  document.getElementById("filterReportButton").addEventListener("click", function() {
    document.getElementById("selectMonthYearForm").submit();
});

</script>
</body>
</html>

//// row 354 process

<?php
require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Fungsi untuk membaca file Excel
function readExcelFile($filePath) {
    if (file_exists($filePath)) {
        $spreadsheet = IOFactory::load($filePath);
        $sheet = $spreadsheet->getActiveSheet();
        return $sheet->toArray();
    }
    return null;
}

// Fungsi untuk menentukan shift berdasarkan timestamp
function tentukanShift($timestamp) {
    $time = strtotime($timestamp);
    $jam = date('H', $time);

    if ($jam >= 7 && $jam < 15) {
        return '1st';
    } elseif ($jam >= 15 && $jam < 23) {
        return '2nd';
    } else {
        return '3rd';
    }
}

// Fungsi untuk memformat tanggal shift dengan penyesuaian shift 3
function formatShiftDate($timestamp, $shift) {
    $date = date('d/m/Y', strtotime($timestamp));
    if ($shift === '3rd') {
        $time = strtotime($timestamp);
        if (date('H', $time) < 7) { // Jika sebelum pukul 07:00
            $date = date('d/m/Y', strtotime('-1 day', $time)); // Kurangi satu hari
        }
    }
    return $date;
}

function calculateDowntime($machineChangesData) {
    $downtimeData = [];
    $lastStatus = [];
    $lastTimestamp = [];
    $lastReason = [];

    foreach ($machineChangesData as $index => $row) {
        if ($index == 0 || !isset($row[1], $row[2], $row[3], $row[5])) continue; // Lewati header & validasi

        $machineID = trim($row[1]); // Kolom B (Machine ID)
        $status = trim($row[2]);   // Kolom C (Status)
        $downtimeReason = trim($row[3]); // Kolom D (Downtime Reason)
        $timestamp = trim($row[5]);     // Kolom F (Timestamp)

        if (empty($timestamp)) continue; // Lewati jika timestamp kosong

        $shift = tentukanShift($timestamp);
        $date = formatShiftDate($timestamp, $shift);

        if (!isset($downtimeData[$machineID][$date][$shift])) {
            $downtimeData[$machineID][$date][$shift] = [
                'totalDowntime' => 0,
                'downtimeReasons' => []
            ];
        }

        if (!isset($lastStatus[$machineID][$shift])) {
            if ($status === '0') {
                $lastStatus[$machineID][$shift] = '0';
                $lastTimestamp[$machineID][$shift] = $timestamp;
                $lastReason[$machineID][$shift] = $downtimeReason;
            }
            continue;
        }

        if ($status === '0' && $lastStatus[$machineID][$shift] === '1') {
            if (!empty($lastTimestamp[$machineID][$shift])) {
                $duration = (strtotime($timestamp) - strtotime($lastTimestamp[$machineID][$shift])) / 3600; // Durasi dalam jam
                $downtimeData[$machineID][$date][$shift]['totalDowntime'] += $duration;

                if (!isset($downtimeData[$machineID][$date][$shift]['downtimeReasons'][$downtimeReason])) {
                    $downtimeData[$machineID][$date][$shift]['downtimeReasons'][$downtimeReason] = 0;
                }
                $downtimeData[$machineID][$date][$shift]['downtimeReasons'][$downtimeReason] += $duration;
            }

            $lastStatus[$machineID][$shift] = '0';
            $lastTimestamp[$machineID][$shift] = $timestamp;
            $lastReason[$machineID][$shift] = $downtimeReason;
        } elseif ($status === '1') {
            $lastStatus[$machineID][$shift] = '1';
            $lastTimestamp[$machineID][$shift] = $timestamp;
        }
    }

    return $downtimeData;
}


// Ambil bulan dan tahun dari query string
$month = isset($_GET['month']) ? $_GET['month'] : null;
$year = isset($_GET['year']) ? $_GET['year'] : null;

if ($month && $year) {
    $folderPath = __DIR__ . "/pts_db/$year/$month/";

    // Path file Excel
    $filePaths = [
        'output' => $folderPath . "output_entries.xlsx",
        'jobOrder' => $folderPath . "job_order_changes.xlsx",
        'reject' => $folderPath . "reject_entries.xlsx",
        'toolingChanges' => $folderPath . "tooling_changes.xlsx",
        'toolingTargets' => $folderPath . "tooling_targets.xlsx",
        'products' => $folderPath . "products.xlsx",
        'tonnage' => $folderPath . "tonnage.xlsx",
        'machineChanges' => $folderPath . "machine_changes.xlsx",
    ];

    // Membaca semua file Excel menggunakan fungsi readExcelFile
    $outputData = readExcelFile($filePaths['output']);
    $jobOrderData = readExcelFile($filePaths['jobOrder']);
    $rejectData = readExcelFile($filePaths['reject']);
    $toolingData = readExcelFile($filePaths['toolingChanges']);
    $toolingTargetsData = readExcelFile($filePaths['toolingTargets']);
    $productsData = readExcelFile($filePaths['products']);
    $tonnageData = readExcelFile($filePaths['tonnage']);
    $machineChangesData = readExcelFile($filePaths['machineChanges']);

    // Pastikan semua data telah dibaca dengan benar
    if ($outputData && $machineChangesData) {
        // Hitung downtime menggunakan data dari machine_changes.xlsx
        $downtimeData = calculateDowntime($machineChangesData);

        // Tambahkan downtime ke hasil output
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header
            $machineID = trim($row[1]); // Kolom B untuk Machine ID
            $timestamp = trim($row[5]); // Kolom F untuk Timestamp
            $shiftDate = formatShiftDate($timestamp, tentukanShift($timestamp));
            $shift = tentukanShift($timestamp);

            $row['totalDowntime'] = $downtimeData[$machineID][$shiftDate][$shift]['totalDowntime'] ?? 0;
            $row['downtimeReasons'] = $downtimeData[$machineID][$shiftDate][$shift]['downtimeReasons'] ?? [];
            $outputData[$index] = $row;
        }

        // Map tooling targets berdasarkan toolingID dan productID
        $toolingTargets = [];
        foreach ($toolingTargetsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[0];  // Kolom A (Tooling ID)
            $productID = $row[1];  // Kolom B (Product ID)
            $targetCavityNum = $row[2]; // Kolom C (Target Cavity Number)
            $targetCycleTime = $row[3]; // Kolom D (Target Cycle Time)

            if ($toolingID) {
                $toolingTargets[$toolingID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
            if ($productID) {
                $toolingTargets[$productID] = [
                    'targetCavityNum' => $targetCavityNum,
                    'targetCycleTime' => $targetCycleTime
                ];
            }
        }
// Map job order details
$jobOrderDetails = [];
foreach ($jobOrderData as $index => $row) {
    if ($index == 0) continue; // Lewati header

    $jobOrderID = $row[1]; // Kolom B (Job Order ID)
    $machineID = $row[2];  // Kolom C (Machine ID)
    $toolingID = $row[3];  // Kolom D (Tooling ID)
    $status = $row[4];     // Kolom E (Status)
    $timestamp = $row[6];  // Kolom G (Timestamp)

    // Format ulang tanggal ke d/m/y
    $formattedTimestamp = date('d/m/Y H:i', strtotime($timestamp));

    // Jika jobOrderID belum ada, inisialisasi
    if (!isset($jobOrderDetails[$jobOrderID])) {
        $jobOrderDetails[$jobOrderID] = [
            'machineID' => $machineID,
            'toolingID' => $toolingID,
            'startDate' => $formattedTimestamp, // Tetapkan timestamp pertama sebagai startDate
            'endDate' => 'RUNNING',            // Default endDate adalah RUNNING
        ];
    }

    // Perbarui endDate jika status adalah 'PAUSED' atau 'CLOSED'
    if (in_array($status, ['PAUSED', 'CLOSED'])) {
        $jobOrderDetails[$jobOrderID]['endDate'] = $formattedTimestamp;
    }
}

        // Map tooling changes to get productID, cavityNum, and cycleTime by toolingID
        $toolingDetails = [];
        foreach ($toolingData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $toolingID = $row[1];  // Kolom B (Tooling ID)
            $productID = $row[2];  // Kolom C (Product ID)
            $cavityNum = $row[3];  // Kolom D (Cavity Number)
            $cycleTime = $row[4];  // Kolom E (Cycle Time)

            $toolingDetails[$toolingID] = [
                'productID' => $productID,
                'cavityNum' => $cavityNum,
                'cycleTime' => $cycleTime,
            ];
        }

        // Map products untuk mendapatkan customerID dan productName berdasarkan productID
        $productDetails = [];
        foreach ($productsData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $productID = $row[0];  // Kolom A (Product ID)
            $customerID = $row[1]; // Kolom B (Customer ID)
            $productName = $row[2]; // Kolom C (Product Name)

            $productDetails[$productID] = [
                'customerID' => $customerID,
                'productName' => $productName,
            ];
        }

        // Map tonnage untuk mendapatkan tonnage berdasarkan machineID
        $machineTonnage = [];
        foreach ($tonnageData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $machineID = $row[0];  // Kolom A (Machine ID)
            $tonnage = $row[1];    // Kolom B (Tonnage)

            $machineTonnage[$machineID] = $tonnage;
        }

        // Proses output_entries.xlsx
        $results = [];
        foreach ($outputData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[2]; // Kolom C (Job Order ID)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            // Susun kunci berdasarkan jobOrderID, tanggal, dan shift
            $key = "$jobOrderID|$shiftDate|$shift";

            if (!isset($results[$key])) {
                $toolingID = $jobOrderDetails[$jobOrderID]['toolingID'] ?? 'N/A';
                $productID = $toolingDetails[$toolingID]['productID'] ?? 'N/A';
                $machineID = $jobOrderDetails[$jobOrderID]['machineID'] ?? 'N/A';
                $results[$key] = [
                    'date' => $shiftDate, // PostingDate
                    'customerID' => $productDetails[$productID]['customerID'] ?? 'N/A', // CustName
                    'productID' => $productID, // PartNo
                    'productName' => $productDetails[$productID]['productName'] ?? 'N/A', // PartName
                    'toolingID' => $toolingID, // MoldNo
                    'jobOrderID' => $jobOrderID, // JSNo
                    'shift' => $shift, // OprShift
                    'totalQuantity' => 0, // AOutput
                    'cavityNum' => $toolingDetails[$toolingID]['cavityNum'] ?? 'N/A', // Acavity
                    'targetCavityNum' => $toolingTargets[$toolingID]['targetCavityNum'] ?? $toolingTargets[$productID]['targetCavityNum'] ?? 'N/A', // QCV
                    'targetCycleTime' => $toolingTargets[$toolingID]['targetCycleTime'] ?? $toolingTargets[$productID]['targetCycleTime'] ?? 'N/A', // QCT
                    'cycleTime' => $toolingDetails[$toolingID]['cycleTime'] ?? 'N/A', // ACT
                    'ShiftHour' => 7.5, // ShiftHour (default value)
                    'NumOpr' => 1, // NumOpr (default value)
                    'machineID' => $machineID, // ActualMC
                    'tonnage' => $machineTonnage[$machineID] ?? 'N/A', // MCTonnage
                    'startDate' => $jobOrderDetails[$jobOrderID]['startDate'] ?? 'N/A', // StartTime
                    'endDate' => $jobOrderDetails[$jobOrderID]['endDate'] ?? 'N/A', // EndTime
                    'rejects' => [], // Untuk jenis reject
                    'downtime' => 0, // Total downtime
                    'downtimeReasons' => [], // Rincian downtime
                ];
            }

            $results[$key]['totalQuantity'] += $quantity;
        }

        // Proses reject_entries.xlsx
        foreach ($rejectData as $index => $row) {
            if ($index == 0) continue; // Lewati header

            $jobOrderID = $row[1]; // Kolom B (Job Order ID)
            $rejectType = $row[2]; // Kolom C (Reject Type)
            $quantity = $row[3];   // Kolom D (Quantity)
            $timestamp = $row[5];  // Kolom F (Timestamp)

            $shift = tentukanShift($timestamp);
            $shiftDate = formatShiftDate($timestamp, $shift);

            $key = "$jobOrderID|$shiftDate|$shift";

            if (isset($results[$key])) {
                if (!isset($results[$key]['rejects'][$rejectType])) {
                    $results[$key]['rejects'][$rejectType] = 0;
                }
                $results[$key]['rejects'][$rejectType] += $quantity;
            }
        }
        
// Proses downtime
foreach ($downtimeData as $machineID => $shiftData) {
    foreach ($shiftData as $shiftDate => $shifts) {
        foreach ($shifts as $shift => $downtime) {
            foreach ($results as $key => &$result) {
                if (
                    $result['machineID'] === $machineID &&
                    $result['date'] === $shiftDate &&
                    $result['shift'] === $shift
                ) {
                    // Format total downtime dengan 1 angka di belakang koma
                    $result['downtime'] = number_format($result['downtime'] + $downtime['totalDowntime'], 1);

                    foreach ($downtime['downtimeReasons'] as $reason => $duration) {
                        if (!isset($result['downtimeReasons'][$reason])) {
                            $result['downtimeReasons'][$reason] = 0;
                        }
                        // Format setiap alasan downtime dengan 1 angka di belakang koma
                        $result['downtimeReasons'][$reason] = number_format(
                            $result['downtimeReasons'][$reason] + $duration, 
                            1
                        );
                    }
                }
            }
        }
    }
}


        
    } else {
        echo "File output_entries.xlsx, job_order_changes.xlsx, reject_entries.xlsx, tooling_changes.xlsx, tooling_targets.xlsx, atau downtime_entries.xlsx tidak ditemukan di folder $folderPath.";
    }
} else {
    echo "Silakan pilih bulan dan tahun terlebih dahulu.";
}
if (!$machineChangesData) {
    echo "Data machine_changes.xlsx tidak dapat dibaca atau kosong.";
}

?>

